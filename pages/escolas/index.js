import { Badge, Box, Button, Grid, InputAdornment, TextField, Typography } from '@mui/material';
import Head from 'next/head';
import styles from '../../styles/Home.module.css'
import Link from 'next/link';

import * as React from 'react';
import { styled } from '@mui/material/styles';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell, { tableCellClasses } from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';

import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormControl from '@mui/material/FormControl';
import Select from '@mui/material/Select';

import Search from '@mui/icons-material/Search';

import OutlinedInput from '@mui/material/OutlinedInput';
import ListItemText from '@mui/material/ListItemText';
import Checkbox from '@mui/material/Checkbox';

export default function Escolas() {
  const [age, setAge] = React.useState('');

  const [personName, setPersonName] = React.useState([]);
  const handleSegmentos = (event) => {
    const {
      target: { value },
    } = event;
    setPersonName(
      // On autofill we get a stringified value.
      typeof value === 'string' ? value.split(',') : value,
    );
  };

  const segmentos = [
    'EFAI',
    'EM',
    'EF',
    'EFAF',
    'EI',
    'PV',
  ];

  const StyledTableCell = styled(TableCell)(({ theme }) => ({
    [`&.${tableCellClasses.head}`]: {
      backgroundColor: '#1A4287',
      color: theme.palette.common.white,
    },
    [`&.${tableCellClasses.body}`]: {
      fontSize: 14,
    },
  }));

  const StyledTableRow = styled(TableRow)(({ theme }) => ({
    '&:nth-of-type(odd)': {
      backgroundColor: theme.palette.action.hover,
    },
    // hide last border
    '&:last-child td, &:last-child th': {
      border: 0,
    },
  }));

  function createData(tipo, id, salesforceId, nome, cidade, segmentoAtivo, status) {
    return { tipo, id, salesforceId, nome, cidade, segmentoAtivo, status };
  }

  const rows = [
    createData('SF', 1590, '0016g00000BIRXIAA5', 'Escola de exemplo 1', 'Campinas', 'EFAI, EM, EF, EFAF, EI, PV', 'Ativo'),
    createData('CM', 2370, '0016g00000KLwjeAAD', 'Escola de exemplo 2', 'Rio de Janeiro', 'EFAF, EI, PV', 'Inativo'),
    createData('SF', 2620, '0014v00002OxFTmAAN', 'Escola de exemplo 3', 'São Paulo', 'EFAF, PV', 'Ativo'),
    createData('SF', 3050, '0017v0000vOxaTNABN', 'Escola de exemplo 4', 'Montes Claros', 'EM', 'Ativo'),
    createData('SF', 3560, '0016g00000BIRbpAAH', 'Escola de exemplo 5', 'João Pessoa', 'EFAF, EI, PV', 'Ativo'),
    createData('SF', 2160, '0013g00000AFKbaANM', 'Escola de exemplo 6', 'Campos dos Goytacazes', 'EFAF, EI, PV', 'Ativo'),
    createData('SF', 6816, '0013g00000ASKNyALS', 'Escola de exemplo 7', 'Resende', 'EFAF, EI, PV', 'Inativo'),
    createData('SF', 6816, '0019d00000ERdNyADQ', 'Escola de exemplo 8', 'Rio de Janeiro', 'PV', 'Ativo'),
  ];

  const Item = styled(Paper)(({ theme }) => ({
    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',
    ...theme.typography.body2,
    textAlign: 'left',
    color: theme.palette.text.secondary,
  }));

  return (
    <>
      <Head>
        <title>Pmais · escolas</title>
        <link rel="icon" href="/favicon.ico" />
        <meta name="description" content="Generated by create next app" />
      </Head>

      <div className={styles.container}>
        <div className="justify-content-between">
          <Typography
            className="titleMain"
            variant="h5"
            color="#323232"
            noWrap
            component="div">
              Escolas
          </Typography>
          <Button className="background-blue button-rounded" variant="contained">
            Gerar CSV
          </Button>
        </div>

        <Box sx={{ paddingY: 3 }}>
          <Grid container>
            <Grid style={{paddingRight: 10}} item
                xs={12}
                md={12}
                lg={6}>
              <Item elevation={0}>
                <TextField
                  InputProps={{
                    endAdornment: (
                      <InputAdornment position="end">
                        <Search style={{color: '#1A4287'}} />
                      </InputAdornment>
                    ),
                  }}
                  fullWidth
                  id="outlined-basic"
                  label="Pesquisar"
                  variant="outlined" />
              </Item>
            </Grid>
            
            <Grid style={{paddingRight: 10}}
                item
                xs={12}
                md={12}
                lg={3}>
              <Item elevation={0}>
                <FormControl fullWidth>
                  <InputLabel id="demo-multiple-checkbox-label">Segmentos</InputLabel>
                  <Select
                    labelId="demo-multiple-checkbox-label"
                    id="demo-multiple-checkbox"
                    multiple
                    value={personName}
                    onChange={handleSegmentos}
                    input={<OutlinedInput label="Segmentos" />}
                    renderValue={(selected) => selected.join(', ')}
                  >
                    {segmentos.map((segmento) => (
                      <MenuItem key={segmento} value={segmento}>
                        <Checkbox checked={personName.indexOf(segmento) > -1} />
                        <ListItemText primary={segmento} />
                      </MenuItem>
                    ))}
                  </Select>
                </FormControl>
              </Item>
            </Grid>

            <Grid style={{paddingRight: 10}}
                item
                xs={12}
                md={12}
                lg={3}>
              <Item elevation={0}>
                <FormControl fullWidth>
                  <InputLabel id="demo-simple-select-label">
                    Status
                  </InputLabel>
                  <Select
                    labelId="demo-simple-select-label"
                    id="demo-simple-select"
                    value={age}
                    label="Status"
                  >
                    <MenuItem value={10}>Option 1</MenuItem>
                    <MenuItem value={20}>Option 2</MenuItem>
                    <MenuItem value={30}>Option 3</MenuItem>
                  </Select>
                </FormControl>
              </Item>
            </Grid>
          </Grid>
        </Box>

        <div class="d-flex" style={{ paddingBottom: 20 }}>
            <div className="d-flex">
              <div className="my-badge-blue">SF</div>
              <span style={{ paddingLeft: 6, paddingTop: 2 }}>
                Salesforce
              </span>
            </div>
            <div style={{marginLeft: 10}} className="d-flex">
              <div className="my-badge-dark-blue">CM</div>
              <span style={{ paddingLeft: 6, paddingTop: 2 }}>
                Cadastro Manual
              </span>
            </div>
          </div>

        <Box style={{ borderTop: '2px solid #DCDCDD' }} sx={{ paddingTop: 3 }}>
          <TableContainer component={Paper}>
            <Table sx={{ minWidth: 700 }} aria-label="customized table">
              <TableHead>
                <TableRow>
                  <StyledTableCell>Tipo</StyledTableCell>
                  <StyledTableCell align="center">ID</StyledTableCell>
                  <StyledTableCell align="center">SalesforceID</StyledTableCell>
                  <StyledTableCell align="center">Nome</StyledTableCell>
                  <StyledTableCell align="center">Cidade</StyledTableCell>
                  <StyledTableCell align="center">Segmento ativo</StyledTableCell>
                  <StyledTableCell align="center">Status</StyledTableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {rows.map((row, index) => (
                  <Link href="/apps">
                    <StyledTableRow className="cursor-pointer" key={row.name}>
                      <StyledTableCell component="th" scope="row">
                        <div className={row.tipo === 'SF' ? 'my-badge-blue' : 'my-badge-dark-blue'}>
                          {row.tipo}
                        </div>
                      </StyledTableCell>
                      <StyledTableCell align="center">{row.id}</StyledTableCell>
                      <StyledTableCell align="center">{row.salesforceId}</StyledTableCell>
                      <StyledTableCell align="center">{row.nome}</StyledTableCell>
                      <StyledTableCell align="center">{row.cidade}</StyledTableCell>
                      <StyledTableCell align="center">{row.segmentoAtivo}</StyledTableCell>
                      <StyledTableCell align="center">
                        <div className={row.status == 'Ativo' ? 'my-badge-active' : 'my-badge-inactive'}>
                          {row.status}
                        </div>
                      </StyledTableCell>
                    </StyledTableRow>
                  </Link>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        </Box>
      </div>
    </>
  );
}